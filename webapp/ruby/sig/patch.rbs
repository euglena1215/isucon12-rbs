module SQLite3
  class Database
    type row_value_type = String | Integer | Float | nil
    def execute: (String, Array[untyped]) ?{ (?) -> untyped } -> Array[Array[row_value_type]]
    def changes: () -> untyped
    def get_first_row: (String, Array[untyped]) -> Array[row_value_type]?
               
    def initialize: (String, results_as_hash: bool) { (?) -> untyped } -> untyped
  end
end

module Mysql2
  class Error < StandardError
    def error_number: () -> Integer
  end
end

class Time
  def iso8601: () -> String
end

class Open3
  def self.capture2e: (*String) -> [String, Process::Status]
end

module OpenSSL
  class PKey
    class RSA
      def initialize: (String) -> void
    end
  end
end

class CSV
  def headers: () -> Array[String]
end
